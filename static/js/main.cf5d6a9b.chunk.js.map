{"version":3,"sources":["components/Coin.js","App.js","index.js"],"names":["Coin","image","name","symbol","price","volume","priceChange","marketCap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","console","log","catch","error","filteredCoins","filter","eachCoin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","coin","current_price","total_volume","market_cap_change_percentage_24h","market_cap","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PA2CeA,EAvCF,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UAC5D,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UAEI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKR,EAAOS,IAAI,WACrB,6BAAKR,IAEL,mBAAGM,UAAU,cAAb,SACKL,OAIT,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cACMJ,KAGN,oBAAGI,UAAU,cAAb,cACMH,EAAOM,oBAIZL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OAEA,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OAGJ,oBAAGJ,UAAU,iBAAb,uBACeD,EAAUI,6B,MCwB9BE,MAtDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,IACGC,IAAI,4HACJC,MAAK,SAAAC,GACJP,EAASO,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,SACfG,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAI,gBAAiBE,QAChD,IAGH,IAKMC,EAAgBd,EAAMe,QAAO,SAAAC,GAAQ,OACzCA,EAAS7B,KAAK8B,cAAcC,SAAShB,EAAOe,kBAG9C,OACE,sBAAKxB,UAAU,WAAf,UACI,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,oBAAd,+BAEA,+BACE,uBACE0B,KAAK,OACLC,YAAY,SAAS3B,UAAU,oBAC/B4B,SAlBS,SAAAC,GACnBnB,EAAUmB,EAAEC,OAAOC,eAsBdV,EAAcW,KAAI,SAAAC,GACjB,OAAO,cAAC,EAAD,CAELvC,KAAMuC,EAAKvC,KACXD,MAAOwC,EAAKxC,MACZE,OAAQsC,EAAKtC,OACbC,MAAOqC,EAAKC,cACZrC,OAAQoC,EAAKE,aACbrC,YAAamC,EAAKG,iCAClBrC,UAAWkC,EAAKI,YAPXJ,EAAKK,WCxCtBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf5d6a9b.chunk.js","sourcesContent":["//keyword: rafce\r\nimport React from 'react';\r\nimport './Coin.css';\r\n\r\nconst Coin = ({image, name, symbol, price, volume, priceChange, marketCap}) => {\r\n    return (\r\n        <div className='coin-container'>\r\n            <div className='coin-row'>\r\n                \r\n                <div className='coin'>\r\n                    <img src={image} alt='crypto' />\r\n                    <h1>{name}</h1>\r\n\r\n                    <p className='coin-symbol'>\r\n                        {symbol}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className='coin-data'>\r\n                    <p className='coin-price'>\r\n                        ${price}\r\n                    </p>\r\n\r\n                    <p className='coin-volume'>\r\n                        ${volume.toLocaleString()} \r\n                        {/* we used toLocaleString() method in order to keep comas of the volume keyword's value (Ex: $1,156,083,787,009, otherwise it would turn into $1156083787009) */}\r\n                    </p>\r\n\r\n                    {priceChange < 0 ? (\r\n                        <p className='coin-percent red'>{priceChange.toFixed(2)}%</p>\r\n                    ) : (\r\n                        <p className='coin-percent green'>{priceChange.toFixed(2)}%</p>\r\n                    )}\r\n\r\n                    <p className='coin-marketCap'>\r\n                        Mkt Cap: ${marketCap.toLocaleString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport Coin from './components/Coin';\nimport './App.css';\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    axios\n      .get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n      .then(res => {\n        setCoins(res.data);\n        console.log(res.data);\n      }).catch(error => console.log('Error alert: ', error))\n  }, [])\n\n  //we catch whatever is written to search and get its value\n  const handleChange = e => {\n    setSearch(e.target.value)\n  }\n\n  //func for filtering actual coins and displaying whatever we type in\n  const filteredCoins = coins.filter(eachCoin => \n    eachCoin.name.toLowerCase().includes(search.toLowerCase())\n    );\n  \n  return (\n    <div className=\"coin-app\">\n        <div className='coin-search'>\n          <h1 className='coin-search-title'>Search a Currency</h1>\n\n          <form>\n            <input \n              type='text' \n              placeholder='Search' className='coin-search-input' \n              onChange={handleChange}\n              />\n          </form>\n        </div>\n\n        {filteredCoins.map(coin => {\n          return <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            price={coin.current_price}\n            volume={coin.total_volume}\n            priceChange={coin.market_cap_change_percentage_24h}\n            marketCap={coin.market_cap}\n          />\n          })\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}